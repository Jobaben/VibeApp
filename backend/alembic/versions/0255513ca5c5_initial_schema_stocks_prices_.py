"""Initial schema - stocks, prices, fundamentals, scores, watchlists

Revision ID: 0255513ca5c5
Revises: 
Create Date: 2025-10-23 20:34:18.875994

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0255513ca5c5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sector_averages',
    sa.Column('sector', sa.String(length=100), nullable=False),
    sa.Column('avg_pe', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_roic', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_roe', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_debt_equity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_ev_ebitda', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_gross_margin', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_operating_margin', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_net_margin', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('stock_count', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sector_averages_sector'), 'sector_averages', ['sector'], unique=True)
    op.create_table('stocks',
    sa.Column('ticker', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('isin', sa.String(length=12), nullable=True),
    sa.Column('avanza_id', sa.String(length=50), nullable=True),
    sa.Column('instrument_type', sa.Enum('STOCK', 'FUND', 'ETF', 'CERTIFICATE', 'BOND', 'WARRANT', 'OTHER', name='instrumenttype'), nullable=False),
    sa.Column('sector', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('market_cap', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('exchange', sa.String(length=50), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_stock_sector', 'stocks', ['sector'], unique=False)
    op.create_index('idx_stock_ticker', 'stocks', ['ticker'], unique=False)
    op.create_index('idx_stock_type', 'stocks', ['instrument_type'], unique=False)
    op.create_index(op.f('ix_stocks_avanza_id'), 'stocks', ['avanza_id'], unique=True)
    op.create_index(op.f('ix_stocks_isin'), 'stocks', ['isin'], unique=True)
    op.create_index(op.f('ix_stocks_sector'), 'stocks', ['sector'], unique=False)
    op.create_index(op.f('ix_stocks_ticker'), 'stocks', ['ticker'], unique=True)
    op.create_table('watchlists',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_watchlists_user_id'), 'watchlists', ['user_id'], unique=False)
    op.create_table('stock_fundamentals',
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('pe_ratio', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ev_ebitda', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('peg_ratio', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('pb_ratio', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ps_ratio', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('roic', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('roe', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('gross_margin', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('operating_margin', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('net_margin', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('debt_equity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('current_ratio', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('fcf_yield', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('interest_coverage', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('revenue_growth', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('earnings_growth', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('dividend_yield', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('payout_ratio', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stock_id')
    )
    op.create_table('stock_prices',
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('open', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('high', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('low', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('close', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('adjusted_close', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_stock_price_date', 'stock_prices', ['date'], unique=False)
    op.create_index('idx_stock_price_stock_date', 'stock_prices', ['stock_id', 'date'], unique=True)
    op.create_table('stock_scores',
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('total_score', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('value_score', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('quality_score', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('momentum_score', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('health_score', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('signal', sa.Enum('STRONG_BUY', 'BUY', 'HOLD', 'SELL', 'STRONG_SELL', name='signal'), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stock_id')
    )
    op.create_index('idx_stock_score_signal', 'stock_scores', ['signal'], unique=False)
    op.create_index('idx_stock_score_total', 'stock_scores', ['total_score'], unique=False, postgresql_ops={'total_score': 'DESC'})
    op.create_table('watchlist_items',
    sa.Column('watchlist_id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('target_price', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['watchlist_id'], ['watchlists.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_watchlist_item_unique', 'watchlist_items', ['watchlist_id', 'stock_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_watchlist_item_unique', table_name='watchlist_items')
    op.drop_table('watchlist_items')
    op.drop_index('idx_stock_score_total', table_name='stock_scores', postgresql_ops={'total_score': 'DESC'})
    op.drop_index('idx_stock_score_signal', table_name='stock_scores')
    op.drop_table('stock_scores')
    op.drop_index('idx_stock_price_stock_date', table_name='stock_prices')
    op.drop_index('idx_stock_price_date', table_name='stock_prices')
    op.drop_table('stock_prices')
    op.drop_table('stock_fundamentals')
    op.drop_index(op.f('ix_watchlists_user_id'), table_name='watchlists')
    op.drop_table('watchlists')
    op.drop_index(op.f('ix_stocks_ticker'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_sector'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_isin'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_avanza_id'), table_name='stocks')
    op.drop_index('idx_stock_type', table_name='stocks')
    op.drop_index('idx_stock_ticker', table_name='stocks')
    op.drop_index('idx_stock_sector', table_name='stocks')
    op.drop_table('stocks')
    op.drop_index(op.f('ix_sector_averages_sector'), table_name='sector_averages')
    op.drop_table('sector_averages')
    # ### end Alembic commands ###
